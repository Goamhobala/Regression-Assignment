library(tidyverse)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
mean_particle <- mean(data_tidy_air_quality$particulate_matter)
sd_particle <- sd(data_tidy_air_quality$particulate_matter)
ggplot(data_tidy_air_quality, aes(x=particulate_matter))+
geom_histogram(fill="deepskyblue", color="black", binwidth = 3, aes(y=..density..))+
stat_function(fun=dnorm, args=list(mean=mean_particle, sd=sd_particle), color="firebrick4", size=1.2)+
labs(title="Density Plot of Particulate Matter", y="Density", x="Particulate Matter")
knitr::opts_chunk$set(echo = TRUE)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
knitr::opts_chunk$set(echo = TRUE)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
install.packages("ggplot2")
library(ggplot2)
install.packages("tidyr")
library(tidyr)
data_tidy_air_quality %>%
gather(-particulate_matter, key = "var", value = "value") %>%
ggplot(aes(x = value, y = particulate_matter)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
install.packages("ggplot2")
library(ggplot2)
install.packages("tidyr")
library(tidyr)
install.packages("GGally")
library(GGally)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
install.packages("ggplot2")
library(ggplot2)
install.packages("tidyr")
library(tidyr)
install.packages("GGally")
library(GGally)
continuous_vars <- df[, sapply(df, is.numeric)]
continuous_vars <- df[, sapply(df, is.numeric)]
continuous_vars <- df[, sapply(df, is.numeric)]{UseMethod("["  )}
continuous_vars <- df[, sapply(data_tidy_air_quality, is.numeric)]{UseMethod("["  )}
continuous_vars <- df[, sapply(data_tidy_air_quality, is.numeric)]
continuous_vars <- data_tidy_air_quality[, sapply(data_tidy_air_quality, is.numeric)]
pairs(continuous_vars, main = "Pairwise Scatterplots of Continuous Variables")
knitr::opts_chunk$set(echo = TRUE)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
install.packages("ggplot2")
library(ggplot2)
install.packages("tidyr")
library(tidyr)
data_tidy_air_quality$industrial_activity <- factor(data$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
install.packages("tidyr")
install.packages("ggplot2")
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
ggplot(data_tidy_air_quality, aes(x = industrial_activity, y = particulate_matter)) +
geom_boxplot() +
labs(title = "Particulate Matter vs Industrial Activity",
x = "Industrial Activity",
y = "Particulate Matter") +
theme_minimal()
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
ggplot(data_tidy_air_quality, aes(x = industrial_activity, y = particulate_matter)) +
geom_boxplot() +
labs(title = "Particulate Matter vs Industrial Activity",
x = "Industrial Activity",
y = "Particulate Matter") +
theme_minimal()
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
ggplot(data_tidy_air_quality, aes(x = industrial_activity, y = particulate_matter)) +
geom_boxplot() +
labs(title = "Particulate Matter vs Industrial Activity",
x = "Industrial Activity",
y = "Particulate Matter") +
theme_minimal()
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
p <- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal()
print(p)  # Print the plot
}
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
p <- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
print(p)  # Print the plot
}
for (i in 1:(length(categorical_vars)-1)) {
for (j in (i+1):length(categorical_vars)) {
cat("Contingency Table for", categorical_vars[i], "and", categorical_vars[j], "\n")
print(table(data_tidy_air_quality[[categorical_vars[i]]], data_tidy_air_quality[[categorical_vars[j]]]))
cat("\n")
}
}
for (i in 1:(length(categorical_vars) - 1)) {
for (j in (i + 1):length(categorical_vars)) {
# Create the plot
p <- ggplot(data_tidy_air_quality, aes_string(x = categorical_vars[i], fill = categorical_vars[j])) +
geom_bar(position = "fill") +  # Use "fill" to make it a stacked bar chart (proportions)
labs(title = paste("Stacked Bar Chart of", categorical_vars[i], "and", categorical_vars[j]),
x = categorical_vars[i],
y = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
}
}
View(data_tidy_air_quality)
View(data_tidy_air_quality)
continuous_vars <- data_tidy_air_quality[, sapply(data_tidy_air_quality, is.numeric)]
pairs(continuous_vars, main = "Pairwise Scatterplots of Continuous Variables")
knitr::opts_chunk$set(echo = TRUE)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
install.packages("ggplot2")
library(ggplot2)
install.packages("tidyr")
library(tidyr)
install.packages("ggplot2")
install.packages("tidyr")
knitr::opts_chunk$set(echo = TRUE)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
library(ggplot2)
library(tidyr)
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
p <- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
print(p)  # Print the plot
}
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
p <- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
print(p)  # Print the plot
}
for (i in 1:(length(categorical_vars)-1)) {
for (j in (i+1):length(categorical_vars)) {
cat("Contingency Table for", categorical_vars[i], "and", categorical_vars[j], "\n")
print(table(data_tidy_air_quality[[categorical_vars[i]]], data_tidy_air_quality[[categorical_vars[j]]]))
cat("\n")
}
}
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
p <- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
print(p)  # Print the plot
}
for (var in categorical_vars) {
p <- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
print(p)  # Print the plot
}
knitr::opts_chunk$set(echo = TRUE)
#| results: hide
#| warning: false
#| message: false
#| error: false
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/DataTidyRodoSTA2005S")
data("data_tidy_air_quality", package = "DataTidyRodoSTA2005S")
head(data_tidy_air_quality)
library(ggplot2)
library(tidyr)
continuous_vars <- data_tidy_air_quality[, sapply(data_tidy_air_quality, is.numeric)]
pairs(continuous_vars, main = "Pairwise Scatterplots of Continuous Variables")
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
p <- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
print(p)  # Print the plot
}
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
p<- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
print(p)  # Print the plot
}
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
plt<- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
print(plt)  # Print the plot
}
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
plt<- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal() +
print(plt)  # Print the plot
}
data_tidy_air_quality$industrial_activity <- factor(data_tidy_air_quality$industrial_activity,
levels = c("Low", "Medium", "High"))  # Adjust the levels according to your data
data_tidy_air_quality$day_of_week <- factor(data_tidy_air_quality$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"))
data_tidy_air_quality$holiday <- factor(data_tidy_air_quality$holiday,
levels = c("Yes", "No"))
categorical_vars <- names(data_tidy_air_quality)[sapply(data_tidy_air_quality, is.factor)]
for (var in categorical_vars) {
plt<- ggplot(data_tidy_air_quality, aes_string(x = var, y = "particulate_matter")) +
geom_boxplot() +
labs(title = paste("Particulate Matter vs", var),
x = var,
y = "Particulate Matter") +
theme_minimal()
print(plt)  # Print the plot
}
